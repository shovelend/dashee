version: '2'

vars:
  registry: docker-registry.dun.fh
  base_service_name: dashee

include:
  - from: git+ssh://git@github.com:findmypast/usher_shared_tasks.git
    name: shared_tasks as global
    import:
      - docker

tasks:
  build:
    description: Build dashee image
    do: global.docker.create_image
    service_folder: .
    service_name: <%=base_service_name%>

  push:
    description: Push the dashee image to the Docker registry
    do: global.docker.push_image
    service_name: <%=base_service_name%>

  test:
    description: Run dashee unit tests
    do: global.docker.compose_run
    service_folder: ./docker-compose
    compose_filename: docker-compose-test.yml
    service_name: test
    env:
      - IMAGE=<%=registry%>/findmypast/<%=base_service_name%>:<%=version%>

  publish:
    description: Publish dashee CLI to internal NPM
    do: sequence
    actions:
      - do: global.docker.pull_image
        service_name: <%=base_service_name%>
      - do: global.docker.compose_run
        service_folder: ./docker-compose
        compose_filename: docker-compose-publish.yml
        service_name: publish
        env:
          - IMAGE=<%=registry%>/findmypast/<%=base_service_name%>:<%=version%>

  publish_dashboard:
    description: Publish a dashboard
    do: sequence
    actions:
      - do: shell
        vault_username: mthomas
        vault_password: a6d4786740b14904a070595c0d628027
        command: domesday read-key-value http://<%=vault_username%>:<%=vault_password%>@active.vault.service.consul:8200 secret/grafana/api_key
        options:
          register: api_key
      - do: shell
        transformer: generic2grafana
        service_folder: .
        dashboard_filename: flipper-test-dashboard-generic.json
        service_name: flipper-test
        command: dashee transform <%=transformer%> <%=service_folder%>/<%=dashboard_filename%> <%=service_name%>
      - do: shell
        destination: grafana
        service_name: flipper-test
        path: .
        command: dashee publish-all <%=destination%> <%=service_name%> <%=path%> --grafana-key <%=api_key%>
